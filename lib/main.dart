import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'firebase_options.dart'; // generated by flutterfire configure

void main() {
  WidgetsFlutterBinding.ensureInitialized();
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  final Future<FirebaseApp> _initialization = Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Firestore Connection Check',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: FutureBuilder(
        future: _initialization,
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return const Scaffold(
              body: Center(child: CircularProgressIndicator()),
            );
          }

          if (snapshot.hasError) {
            return const Scaffold(
              body: Center(
                child: Text(
                  '❌ Failed to connect to Firebase',
                  style: TextStyle(fontSize: 20, color: Colors.red),
                ),
              ),
            );
          }

          return const FirestoreCheckPage();
        },
      ),
    );
  }
}

class FirestoreCheckPage extends StatefulWidget {
  const FirestoreCheckPage({super.key});

  @override
  State<FirestoreCheckPage> createState() => _FirestoreCheckPageState();
}

class _FirestoreCheckPageState extends State<FirestoreCheckPage> {
  String statusMessage = "⏳ Checking Firestore...";

  @override
  void initState() {
    super.initState();
    checkFirestoreConnection();
  }

  Future<void> checkFirestoreConnection() async {
    try {
      // Add a test document to Firestore
      final docRef = await FirebaseFirestore.instance
          .collection('test_collection')
          .add({'message': 'Hello from Flutter', 'timestamp': Timestamp.now()});

      // Read the document back
      final docSnapshot = await docRef.get();
      if (docSnapshot.exists) {
        setState(() {
          statusMessage =
              '✅ Firestore Working!\nDocument ID: ${docSnapshot.id}\nMessage: ${docSnapshot['message']}';
        });
      } else {
        setState(() {
          statusMessage = '⚠️ Document not found after writing.';
        });
      }
    } catch (e) {
      setState(() {
        statusMessage = '❌ Firestore Error:\n$e';
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Text(
          statusMessage,
          textAlign: TextAlign.center,
          style: const TextStyle(fontSize: 18),
        ),
      ),
    );
  }
}
